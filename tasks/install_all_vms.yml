---
- name: Test if VM {{ vm.host }} @{{ vm.org }} exists
  stat:
    path: "{{ xen_vman_vm_config_path }}/{{ vm.org }}-{{ vm.host }}.cfg"
  register: vm_config_file
  changed_when: False

- name: Get old creation date from {{ vm.host }} @{{ vm.org }} (1/2)
  shell: "sed -n 's/^# created at:    //p' {{ xen_vman_vm_config_path }}/{{ vm.org }}-{{ vm.host }}.cfg"
  register: creation_date
  when: vm_config_file.stat.exists
  changed_when: False

- name: Get old creation date from {{ vm.host }} @{{ vm.org }} (2/2)
  set_fact:
    creation_date: "{{ creation_date.stdout }}"
  when: vm_config_file.stat.exists
  changed_when: False

- name: Set creation date for {{ vm.host }} @{{ vm.org }}
  set_fact:
    creation_date: "{{ ansible_date_time.iso8601 }}"
  when: not vm_config_file.stat.exists

- name: Install xen config for {{ vm.host }} @{{ vm.org }}
  template:
    dest: "{{ xen_vman_vm_config_path }}/{{ vm.org }}-{{ vm.host }}.cfg"
    group: root
    owner: root
    mode: 'u=rw,g=r,o=r'
    src: vm.conf.j2

- name: Tag VM storage type as iSCSI
  template:
    dest: "{{ xen_vman_vm_config_path }}/.iscsi/{{ vm.org }}-{{ vm.host }}"
    group: root
    owner: root
    mode: 'u=rwx,g=rw,o=r'
    src: iscsi_dev.j2
  when: vm.storage_type|default(xen_vman_default_storage_type) == "iscsi"

- name: Untag VM storage type as iSCSI
  file:
    path: "{{ xen_vman_vm_config_path }}/.iscsi/{{ vm.org }}-{{ vm.host }}"
    state: absent
  when: vm.storage_type|default(xen_vman_default_storage_type) != "iscsi"

- name: Set VM auto boot mode
  systemd:
    name: vm@{{ vm.org }}-{{ vm.host }}.service
    enabled: "{{ vm.auto_boot|default(xen_vman_default_auto_boot) }}"

- name: Install VM {{ vm.host }} @{{ vm.org }} if needed
  include_tasks: install_system.yml
  when: not vm_config_file.stat.exists
